/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-04-20 08:23:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.*;
import oracle.jdbc.*;
import java.sql.*;
import oracle.jdbc.*;
import java.util.ArrayList;

public final class instructorPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/Pages/../DBconnection.jsp", Long.valueOf(1713324513832L));
    _jspx_dependants.put("/Pages/../userAuth.jsp", Long.valueOf(1713324516145L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(5);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("oracle.jdbc");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- lots of inline CSS, but since JSP and HTML are already up and everything works, \n");
      out.write("maybe just leave it -->\n");
      out.write("\n");


try {
    int userCheck = (int) session.getAttribute("userType");
    
    if(userCheck != 1 && userCheck != 2) {
        response.sendRedirect("index.jsp");
    }
}
catch(Exception E) {
    response.sendRedirect("index.jsp");
}

      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');

    Connection con = null;

    try {
        Class.forName("oracle.jdbc.OracleDriver");
        con = DriverManager.getConnection("jdbc:oracle:thin:@//cscioraclerh7srv.ad.csbsju.edu:1521/" +
                                                                "csci.cscioraclerh7srv.ad.csbsju.edu",
                                                                "TEAM06", "TEAM06");
    }
    catch(Exception E) {
        out.println("EXCEPTION encountered");
        out.println(E);
    }

      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    \n");
      out.write("    <link rel=\"stylesheet\" href=\"../Styles/styles.css\">\n");
      out.write("    <title>Tarpaulin - Instructor Page</title>\n");
      out.write("  <link rel=\"icon\" type=\"image/x-icon\" href=\"../Images/Tarpaulin_Logo_Alt_2.png\">\n");
      out.write("</head>\n");
      out.write("  <body class=\"studentHomeBody\">\n");
      out.write("    <script src=\"../Scripts/headerLoggedIn.js\"></script>\n");
      out.write("\n");
      out.write("    <script src=\"../Scripts/loadSidebar.js\"></script>\n");
      out.write("    \n");
      out.write("    <section class=\"mainContainer\">\n");
      out.write("\n");
      out.write("        ");

        String instructor = "instructor";
        
        try {
            instructor = (String) session.getAttribute("instructor");
        }
        catch(Exception E) {
            out.println(E);
        }
        
      out.write("\n");
      out.write("\n");
      out.write("        <p style=\"font-size: 2em; font-weight: bold;\">");
      out.print(instructor);
      out.write("</p>\n");
      out.write("\n");
      out.write("        <div style=\"\n");
      out.write("            display: flex;\n");
      out.write("            flex-direction: row;\n");
      out.write("            align-items: center;\n");
      out.write("        \">\n");
      out.write("            <div>\n");
      out.write("                ");

                String rating = "";

                String queryString = 
                "SELECT instructor_score" + "\n" + 
                "FROM TARP_RATES" + "\n" + 
                "WHERE i_username='" + instructor + "'";
                
                PreparedStatement preparedStmt = con.prepareStatement(queryString);

                ResultSet result = preparedStmt.executeQuery();

                ArrayList<Integer> ratings = new ArrayList<Integer>();
                int ratingsSum = 0;

                while(result.next()) {
                    int currentRating = Integer.parseInt(result.getString(1));
                    ratingsSum += currentRating;

                    ratings.add(currentRating);
                }

                result.close();
                preparedStmt.close();

                // calculate average rating
                double avgRating = ratingsSum / ((double) ratings.size());
                avgRating /= 2;
                // round to 2 decimal ppoints
                avgRating = Math.round(avgRating * 100.0) / 100.0;

                for(int i = 0; i < Math.floor(avgRating); i++) {
                
      out.write("\n");
      out.write("                    <img draggable=\"false\" class=\"star\" src=\"../Images/star-full.svg\">\n");
      out.write("                ");

                }
                
      out.write("\n");
      out.write("            </div>\n");
      out.write("            <p style=\"margin-left: 0.5em;\">(");
      out.print(avgRating);
      out.write(")</p>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <button class=\"buttonNormal\" \n");
      out.write("            style=\"margin: 0; font-size: 0.8em;\"\n");
      out.write("            onclick='document.getElementById(\"ratingControls\").style.display = \"flex\"'\n");
      out.write("        >Rate</button>\n");
      out.write("        <div id=\"ratingControls\" style=\"\n");
      out.write("            display: none;\n");
      out.write("            flex-direction: row;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            background-color: white;\n");
      out.write("            border: 1px solid #00000040;\n");
      out.write("            border-radius: 20px;\n");
      out.write("            margin-top: 0.5em;\n");
      out.write("            padding: 7px;\n");
      out.write("            \">\n");
      out.write("            <label><input type=\"radio\" name=\"rating\">0</label>\n");
      out.write("            <label><input type=\"radio\" name=\"rating\">1</label>\n");
      out.write("            <label><input type=\"radio\" name=\"rating\">2</label>\n");
      out.write("            <label><input type=\"radio\" name=\"rating\">3</label>\n");
      out.write("            <label><input type=\"radio\" name=\"rating\">4</label>\n");
      out.write("            <label><input type=\"radio\" name=\"rating\">5</label>\n");
      out.write("\n");
      out.write("            <!-- TODO: implement rate instructor -->\n");
      out.write("            <button class=\"buttonAccent\" style=\"font-size: 0.8em;\"\n");
      out.write("                onclick='document.getElementById(\"ratingControls\").style.display = \"none\"'\n");
      out.write("            >Submit</button>\n");
      out.write("            \n");
      out.write("            <button class=\"buttonNormal\" style=\"font-size: 0.8em;\"\n");
      out.write("                onclick='document.getElementById(\"ratingControls\").style.display = \"none\"'>Close</button>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("            <p style=\"\n");
      out.write("                font-size: 1.75em;\n");
      out.write("                font-weight: 500;\n");
      out.write("                margin-top: 1em;\n");
      out.write("                margin-bottom: 0;\n");
      out.write("            \">Courses</p>\n");
      out.write("  \n");
      out.write("            <section id=\"instructorTaught\" class=\"listContainer coursesList\">\n");
      out.write("                \n");
      out.write("                ");

                queryString = 
                "SELECT course_id" + "\n" + 
                "FROM TARP_COURSE" + "\n" + 
                "WHERE username='" + instructor + "'";
                
                preparedStmt = con.prepareStatement(queryString);

                result = preparedStmt.executeQuery();

                while(result.next()) {
                    String courseId = result.getString(1);
                
      out.write("\n");
      out.write("\n");
      out.write("                    <form class=\"taught\" action=\"setCourseIdSessionAttribute_action.jsp\" method=\"post\">\n");
      out.write("                        <input type=\"text\" name=\"courseId\" value=");
      out.print(courseId);
      out.write(" style=\"display: none;\">\n");
      out.write("\n");
      out.write("                        <button class=\"name\">");
      out.print(courseId);
      out.write("</button>\n");
      out.write("                        \n");
      out.write("                        <!-- rating - maybe implement later if have time and want to -->\n");
      out.write("                        <div style=\"\n");
      out.write("                            display: flex;\n");
      out.write("                            flex-direction: row;\n");
      out.write("                            align-items: center;\n");
      out.write("                        \">\n");
      out.write("                            <div>\n");
      out.write("                                <img draggable=\"false\" class=\"star\" src=\"../Images/star-full.svg\">\n");
      out.write("                                <img draggable=\"false\" class=\"star\" src=\"../Images/star-full.svg\">\n");
      out.write("                                <img draggable=\"false\" class=\"star\" src=\"../Images/star-full.svg\">\n");
      out.write("                                <img draggable=\"false\" class=\"star\" src=\"../Images/star-full.svg\">\n");
      out.write("                            </div>\n");
      out.write("                            <p style=\"margin-left: 0.5em;\">(4.5)</p>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        ");


                        
      out.write("\n");
      out.write("\n");
      out.write("                        <!-- TODO -->\n");
      out.write("                        <p>The description of this course would go here - not yet implemented.</p>\n");
      out.write("                    </form>\n");
      out.write("\n");
      out.write("                ");

                }

                result.close();
                preparedStmt.close();
                
      out.write("\n");
      out.write("\n");
      out.write("            </section>\n");
      out.write("  \n");
      out.write("        \n");
      out.write("    </section>\n");
      out.write("  </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
